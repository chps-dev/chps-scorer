name: Build, Sign and Push CHPs Scorer Image

on:
  push:
    branches:
      - main

jobs:
  docker:
    permissions:
     id-token: write # write seems weird, but it is correct per docs
     attestations: write 
     contents: read
     packages: write # for pushing to ghcr

    runs-on: ubuntu-latest

    steps:
      - 
        name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      -
        name: Login to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: |
            ghcr.io/chps-dev/chps-scorer
          labels: |
            org.opencontainers.image.description="CHPs Scorer"
            org.opencontainers.image.source="https://github.com/chps-dev/chps-scorer"
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
      -
        name: Build and push
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          sbom: true
          provenance: mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Attest
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v1
        id: attest
        with:
          subject-name: ghcr.io/chps-dev/chps-scorer
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
      - 
        name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}
